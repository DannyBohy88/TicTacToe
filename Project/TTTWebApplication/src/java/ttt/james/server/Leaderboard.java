/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ttt.james.server;

import java.util.ArrayList;
import java.util.Comparator;
import static ttt.james.server.Leaderboard.users;

/**
 *
 * @author New User
 */
public class Leaderboard extends javax.swing.JFrame {
     public static TTTWebService ws;
     public static ArrayList<User> users;
    /**
     * Creates new form Leaderboard
     */
    public Leaderboard() {
        initComponents();
        ws = new TTTWebService();
        String res [] = ws.leagueTable().split("\n");
        users = new ArrayList<>();
        String parse [] = res[0].split(",");
        users.add(new User(parse[1]));
        
        for(int i = 1; i< res.length ; i++){
            parse = res[i].split(",");
            if(!checkUser(parse[1])){
                users.add(new User(parse[1]));
            }
            if(!checkUser(parse[2])){
                users.add(new User(parse[2]));
            }
        }
        int gameres = 0;
        
        for(int i = 0; i< res.length ; i++){
            System.out.println(res[i]);
            parse = res[i].split(",");
            gameres = Integer.parseInt(parse[3]);
            if( gameres == 1){
                userUpdateScore(parse[1],"win");
                userUpdateScore(parse[2],"loss");
            }else if ( gameres == 2){
                userUpdateScore(parse[2],"win");
                userUpdateScore(parse[1],"loss");
            }else if( gameres == 3){
                userUpdateScore(parse[1],"draw");
                userUpdateScore(parse[2],"draw");
            }
        }
        int row = 0;
        for(User u : users){
            leaderboard_tbl.setValueAt(u.getUsername(),row,0);
            leaderboard_tbl.setValueAt(u.getWins(),row,1);
            leaderboard_tbl.setValueAt(u.getDraws(),row,2);
            leaderboard_tbl.setValueAt(u.getLosses(),row,3);
            
            row++;
        }
        
        //g.autokey, h.username, o.username, g.gamestate, g.started
        
        
    }
    private void userUpdateScore( String uname , String res){
        for( User u : users){
            if(u.getUsername().matches(uname)){
                u.addScore(res);
            }
        }
    }
    private boolean checkUser( String _uname ){
        boolean found = false;
            for( User u : users ){
                if(u.getUsername().matches(_uname))
                    found = true;
            }
        return found;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leaderboard_titleLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        leaderboard_tbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        leaderboard_titleLbl.setText("Overall Leaderboard");
        leaderboard_titleLbl.setToolTipText("");
        leaderboard_titleLbl.setRequestFocusEnabled(false);

        leaderboard_tbl.setAutoCreateRowSorter(true);
        leaderboard_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Wins", "Draws", "Losses"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(leaderboard_tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(leaderboard_titleLbl))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leaderboard_titleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        leaderboard_titleLbl.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Leaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Leaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Leaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Leaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Leaderboard().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable leaderboard_tbl;
    private javax.swing.JLabel leaderboard_titleLbl;
    // End of variables declaration//GEN-END:variables
}
